;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 10/2/2019
;Author  : unknown
;Company :
;Comments:
;
;
;Chip type               : ATmega128
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 1024
;*****************************************************/
;
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <adroit.h>
;#include <adroit_LCD.h>

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;	xData -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;	xData -> Y+0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;	xData -> Y+0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;	x -> Y+2
;	y -> Y+1
;	baris -> R17
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;	*text -> Y+0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;	*text -> Y+0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;	Baris -> Y+2
;	*text -> Y+0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;	Baris -> Y+1
;	i -> R17
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;	Baris -> Y+1
;	i -> R17
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;	Baris -> Y+2
;	i -> R17
;	j -> R16
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;	Baris -> Y+3
;	*text -> Y+1
;	i -> R17
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;	Baris -> Y+4
;	*text -> Y+2
;	i -> R17
;	j -> R16
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;	Baris -> Y+4
;	*text -> Y+2
;	i -> R17
;	j -> R16
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;	Baris -> Y+4
;	*text -> Y+2
;	i -> R17
;	j -> R16
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;	x -> Y+0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;	x -> Y+0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;	x -> Y+0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;	x -> Y+0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;	x -> Y+1
;	i -> R17
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;
;#define SetGlobalInterrupt        #asm("sei")
;#define ClrGlobalInterrupt        #asm("cli")
;int EnkoderKi, EnkoderKa;	   	// variable data enkoder motor kiri & kanan
;unsigned char SpeedKi, SpeedKa; 	// set point kecepatan	(PID)
;unsigned char dSpeedKi, dSpeedKa; 	// kecepatan aktual (sampling dari enkoder)
;unsigned int dCounterKi, dCounterKa; // data counter untuk rotary enkoder
;
;// External Interrupt 6 service routine
;interrupt [EXT_INT6] void ext_int6_isr(void)
; 0000 0026 {
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
; 0000 0027 // Place your code here
; 0000 0028   if(P_Enkoder1A)
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0000 0029   {  if(P_Enkoder1B) {ClrGlobalInterrupt;   EnkoderKi--;}
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
	cli
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 002A      else            {ClrGlobalInterrupt;   EnkoderKi++;}
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
	cli
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 002B   }
; 0000 002C   else
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0000 002D   {  if(P_Enkoder1B) {ClrGlobalInterrupt;   EnkoderKi++;}
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
	cli
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
; 0000 002E      else            {ClrGlobalInterrupt;   EnkoderKi--;}
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
	cli
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
; 0000 002F   }
;PCODE: $000002E9 VOL: 0
; 0000 0030   SetGlobalInterrupt;
;PCODE: $000002EA VOL: 0
	sei
;PCODE: $000002EB VOL: 0
; 0000 0031   dCounterKi++;
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0000 0032 }
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;
;// External Interrupt 7 service routine
;interrupt [EXT_INT7] void ext_int7_isr(void)
; 0000 0036 {
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0000 0037 // Place your code here
; 0000 0038   if(P_Enkoder2A)
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
; 0000 0039   {  if(P_Enkoder2B) {ClrGlobalInterrupt;   EnkoderKa++;}
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
	cli
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
; 0000 003A      else            {ClrGlobalInterrupt;   EnkoderKa--;}
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
	cli
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
; 0000 003B   }
; 0000 003C   else
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
; 0000 003D   {  if(P_Enkoder2B) {ClrGlobalInterrupt;   EnkoderKa--;}
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
	cli
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
; 0000 003E      else            {ClrGlobalInterrupt;   EnkoderKa++;}
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
	cli
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
; 0000 003F   }
;PCODE: $00000331 VOL: 0
; 0000 0040   SetGlobalInterrupt;
;PCODE: $00000332 VOL: 0
	sei
;PCODE: $00000333 VOL: 0
; 0000 0041   dCounterKa++;
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
; 0000 0042 }
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;
;#ifndef RXB8
;#define RXB8 1
;#endif
;
;#ifndef TXB8
;#define TXB8 0
;#endif
;
;#ifndef UPE
;#define UPE 2
;#endif
;
;#ifndef DOR
;#define DOR 3
;#endif
;
;#ifndef FE
;#define FE 4
;#endif
;
;#ifndef UDRE
;#define UDRE 5
;#endif
;
;#ifndef RXC
;#define RXC 7
;#endif
;
;#define FRAMING_ERROR (1<<FE)
;#define PARITY_ERROR (1<<UPE)
;#define DATA_OVERRUN (1<<DOR)
;#define DATA_REGISTER_EMPTY (1<<UDRE)
;#define RX_COMPLETE (1<<RXC)
;
;// USART1 Receiver buffer
;#define RX_BUFFER_SIZE1 8
;char rx_buffer1[RX_BUFFER_SIZE1];
;
;#if RX_BUFFER_SIZE1 <= 256
;unsigned char rx_wr_index1,rx_rd_index1,rx_counter1;
;#else
;unsigned int rx_wr_index1,rx_rd_index1,rx_counter1;
;#endif
;
;// This flag is set on USART1 Receiver buffer overflow
;bit rx_buffer_overflow1;
;
;// USART1 Receiver interrupt service routine
;interrupt [USART1_RXC] void usart1_rx_isr(void)
; 0000 0075 {
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
; 0000 0076 char status,data;
; 0000 0077 status=UCSR1A;
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;	status -> R17
;	data -> R16
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
; 0000 0078 data=UDR1;
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
; 0000 0079 if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
; 0000 007A    {
; 0000 007B    rx_buffer1[rx_wr_index1++]=data;
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
; 0000 007C #if RX_BUFFER_SIZE1 == 256
; 0000 007D    // special case for receiver buffer size=256
; 0000 007E    if (++rx_counter1 == 0) rx_buffer_overflow1=1;
; 0000 007F #else
; 0000 0080    if (rx_wr_index1 == RX_BUFFER_SIZE1) rx_wr_index1=0;
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
; 0000 0081    if (++rx_counter1 == RX_BUFFER_SIZE1)
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
; 0000 0082       {
; 0000 0083       rx_counter1=0;
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
; 0000 0084       rx_buffer_overflow1=1;
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
; 0000 0085       }
; 0000 0086 #endif
; 0000 0087    }
;PCODE: $0000035D VOL: 0
; 0000 0088 }
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;
;// Get a character from the USART1 Receiver buffer
;#pragma used+
;char getchar1(void)
; 0000 008D {
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
; 0000 008E char data;
; 0000 008F while (rx_counter1==0);
;PCODE: $00000365 VOL: 0
;	data -> R17
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
; 0000 0090 data=rx_buffer1[rx_rd_index1++];
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
; 0000 0091 #if RX_BUFFER_SIZE1 != 256
; 0000 0092 if (rx_rd_index1 == RX_BUFFER_SIZE1) rx_rd_index1=0;
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
; 0000 0093 #endif
; 0000 0094 #asm("cli")
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
	cli
;PCODE: $0000037A VOL: 0
; 0000 0095 --rx_counter1;
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
; 0000 0096 #asm("sei")
;PCODE: $0000037E VOL: 0
	sei
;PCODE: $0000037F VOL: 0
; 0000 0097 return data;
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
; 0000 0098 }
;PCODE: $00000383 VOL: 0
;#pragma used-
;// Write a character to the USART1 Transmitter
;#pragma used+
;void putchar1(char c)
; 0000 009D {
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
; 0000 009E while ((UCSR1A & DATA_REGISTER_EMPTY)==0);
;PCODE: $00000386 VOL: 0
;	c -> Y+0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
; 0000 009F UDR1=c;
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
; 0000 00A0 }
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;#pragma used-
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 00A5 {
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
; 0000 00A6 // Place your code here
; 0000 00A7 
; 0000 00A8 }
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;
;// Timer1 input capture interrupt service routine
;interrupt [TIM1_CAPT] void timer1_capt_isr(void)
; 0000 00AC {
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
; 0000 00AD // Place your code here
; 0000 00AE 
; 0000 00AF }
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;
;// Timer2 output compare interrupt service routine
;interrupt [TIM2_COMP] void timer2_comp_isr(void)
; 0000 00B3 {
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
; 0000 00B4 // Place your code here
; 0000 00B5     static unsigned char _dCounterKi=0, _dCounterKa=0, Timer2Tick=10;

	.DSEG

	.CSEG
; 0000 00B6     SetGlobalInterrupt;
;PCODE: $0000039E VOL: 0
	sei
;PCODE: $0000039F VOL: 0
; 0000 00B7     if(--Timer2Tick==0) Timer2Tick=10; // timer 1 ms dicacah 10 x
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
; 0000 00B8     switch(Timer2Tick)
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
; 0000 00B9     {   case    9:  //dilakukan perhitungan kecepatan motor kiri saat nilai cacahan=9
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
; 0000 00BA             // hitung selisih saat tidak overflow
; 0000 00BB             if(dCounterKi>_dCounterKi)	dSpeedKi = dCounterKi - _dCounterKi;
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
; 0000 00BC             // hitung selisih saat overflow
; 0000 00BD             else                    	dSpeedKi = 0xFF - _dCounterKi + dCounterKi + 1;
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
; 0000 00BE             // update data _dCounterKi
; 0000 00BF             _dCounterKi = dCounterKi;
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
; 0000 00C0             break;
;PCODE: $000003C0 VOL: 0
; 0000 00C1         case    4:  //dilakukan perhitungan kecepatan motor kanan saat nilai cacahan=9
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
; 0000 00C2             // hitung selisih saat tidak overflow
; 0000 00C3             if(dCounterKa>_dCounterKa)	dSpeedKa = dCounterKa - _dCounterKa;
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
;PCODE: $000003CC VOL: 0
; 0000 00C4             // hitung selisih saat overflow
; 0000 00C5             else                   	dSpeedKa = 0xFF - _dCounterKa + dCounterKa + 1;
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
; 0000 00C6             // update data _dCounterKa
; 0000 00C7             _dCounterKa = dCounterKa;
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
; 0000 00C8             break;
;PCODE: $000003D9 VOL: 0
; 0000 00C9     }
;PCODE: $000003DA VOL: 0
; 0000 00CA 
; 0000 00CB }
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 00D0 {
;PCODE: $000003DE VOL: 0
; 0000 00D1 // Declare your local variables here
; 0000 00D2 
; 0000 00D3 // Input/Output Ports initialization
; 0000 00D4 // Port A initialization
; 0000 00D5 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 00D6 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 00D7 PORTA=0x00;
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
; 0000 00D8 DDRA=0xFF;
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
; 0000 00D9 
; 0000 00DA // Port B initialization
; 0000 00DB // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
; 0000 00DC // State7=0 State6=0 State5=0 State4=0 State3=0 State2=P State1=T State0=P
; 0000 00DD PORTB=0x05;
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
; 0000 00DE DDRB=0xF8;
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
; 0000 00DF 
; 0000 00E0 // Port C initialization
; 0000 00E1 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
; 0000 00E2 // State7=0 State6=0 State5=0 State4=0 State3=P State2=P State1=P State0=P
; 0000 00E3 PORTC=0x0F;
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
; 0000 00E4 DDRC=0xF0;
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
; 0000 00E5 
; 0000 00E6 // Port D initialization
; 0000 00E7 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
; 0000 00E8 // State7=0 State6=0 State5=0 State4=0 State3=T State2=T State1=T State0=T
; 0000 00E9 PORTD=0x00;
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0000 00EA DDRD=0xF0;
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
; 0000 00EB 
; 0000 00EC // Port E initialization
; 0000 00ED // Func7=In Func6=In Func5=Out Func4=Out Func3=Out Func2=Out Func1=In Func0=In
; 0000 00EE // State7=P State6=P State5=0 State4=0 State3=0 State2=0 State1=T State0=T
; 0000 00EF PORTE=0xC0;
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
; 0000 00F0 DDRE=0x3C;
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
; 0000 00F1 
; 0000 00F2 // Port F initialization
; 0000 00F3 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 00F4 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 00F5 PORTF=0x00;
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
; 0000 00F6 DDRF=0x00;
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
; 0000 00F7 
; 0000 00F8 // Port G initialization
; 0000 00F9 // Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 00FA // State4=T State3=P State2=P State1=P State0=P
; 0000 00FB PORTG=0x0F;
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
; 0000 00FC DDRG=0x00;
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
; 0000 00FD 
; 0000 00FE // Timer/Counter 0 initialization
; 0000 00FF // Clock source: System Clock
; 0000 0100 // Clock value: 250.000 kHz
; 0000 0101 // Mode: CTC top=OCR0
; 0000 0102 // OC0 output: Toggle on compare match
; 0000 0103 ASSR=0x00;
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
; 0000 0104 TCCR0=0x1C;
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
; 0000 0105 TCNT0=0x00;
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
; 0000 0106 OCR0=0x00;
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
; 0000 0107 
; 0000 0108 // Timer/Counter 1 initialization
; 0000 0109 // Clock source: System Clock
; 0000 010A // Clock value: 2000.000 kHz
; 0000 010B // Mode: Ph. & fr. cor. PWM top=ICR1
; 0000 010C // OC1A output: Non-Inv.
; 0000 010D // OC1B output: Non-Inv.
; 0000 010E // OC1C output: Non-Inv.
; 0000 010F // Noise Canceler: Off
; 0000 0110 // Input Capture on Falling Edge
; 0000 0111 // Timer1 Overflow Interrupt: On
; 0000 0112 // Input Capture Interrupt: On
; 0000 0113 // Compare A Match Interrupt: Off
; 0000 0114 // Compare B Match Interrupt: Off
; 0000 0115 // Compare C Match Interrupt: Off
; 0000 0116 TCCR1A=0xA8;
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
; 0000 0117 TCCR1B=0x12;
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
; 0000 0118 TCNT1H=0x00;
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
; 0000 0119 TCNT1L=0x00;
;PCODE: $00000409 VOL: 0
;PCODE: $0000040A VOL: 0
; 0000 011A ICR1H=0x13;
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
; 0000 011B ICR1L=0x87;
;PCODE: $0000040D VOL: 0
;PCODE: $0000040E VOL: 0
; 0000 011C OCR1AH=0x00;
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
; 0000 011D OCR1AL=0x00;
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
; 0000 011E OCR1BH=0x00;
;PCODE: $00000413 VOL: 0
;PCODE: $00000414 VOL: 0
; 0000 011F OCR1BL=0x00;
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
; 0000 0120 OCR1CH=0x00;
;PCODE: $00000417 VOL: 0
;PCODE: $00000418 VOL: 0
; 0000 0121 OCR1CL=0x00;
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
; 0000 0122 
; 0000 0123 // Timer/Counter 2 initialization
; 0000 0124 // Clock source: System Clock
; 0000 0125 // Clock value: 250.000 kHz
; 0000 0126 // Mode: CTC top=OCR2
; 0000 0127 // OC2 output: Disconnected
; 0000 0128 TCCR2=0x0B;
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
; 0000 0129 TCNT2=0x00;
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
; 0000 012A OCR2=0xF9;
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
; 0000 012B 
; 0000 012C // Timer/Counter 3 initialization
; 0000 012D // Clock source: System Clock
; 0000 012E // Clock value: 16000.000 kHz
; 0000 012F // Mode: Ph. correct PWM top=ICR3
; 0000 0130 // OC3A output: Inverted
; 0000 0131 // OC3B output: Inverted
; 0000 0132 // OC3C output: Discon.
; 0000 0133 // Noise Canceler: Off
; 0000 0134 // Input Capture on Falling Edge
; 0000 0135 // Timer3 Overflow Interrupt: Off
; 0000 0136 // Input Capture Interrupt: Off
; 0000 0137 // Compare A Match Interrupt: Off
; 0000 0138 // Compare B Match Interrupt: Off
; 0000 0139 // Compare C Match Interrupt: Off
; 0000 013A TCCR3A=0xF2;
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
; 0000 013B TCCR3B=0x11;
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
; 0000 013C TCNT3H=0x00;
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
; 0000 013D TCNT3L=0x00;
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
; 0000 013E ICR3H=0x01;
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
; 0000 013F ICR3L=0x90;
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
; 0000 0140 OCR3AH=0x00;
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
; 0000 0141 OCR3AL=0x00;
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
; 0000 0142 OCR3BH=0x00;
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
; 0000 0143 OCR3BL=0x00;
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
; 0000 0144 OCR3CH=0x00;
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
; 0000 0145 OCR3CL=0xc8;
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
; 0000 0146 
; 0000 0147 // External Interrupt(s) initialization
; 0000 0148 // INT0: Off
; 0000 0149 // INT1: Off
; 0000 014A // INT2: Off
; 0000 014B // INT3: Off
; 0000 014C // INT4: Off
; 0000 014D // INT5: Off
; 0000 014E // INT6: On
; 0000 014F // INT6 Mode: Any change
; 0000 0150 // INT7: On
; 0000 0151 // INT7 Mode: Any change
; 0000 0152 EICRA=0x00;
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
; 0000 0153 EICRB=0x50;
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
; 0000 0154 EIMSK=0xC0;
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
; 0000 0155 EIFR=0xC0;
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
; 0000 0156 
; 0000 0157 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0158 TIMSK=0xA4;
;PCODE: $00000441 VOL: 0
;PCODE: $00000442 VOL: 0
; 0000 0159 
; 0000 015A ETIMSK=0x00;
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
; 0000 015B 
; 0000 015C // USART0 initialization
; 0000 015D // USART0 disabled
; 0000 015E UCSR0B=0x00;
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
; 0000 015F 
; 0000 0160 // USART1 initialization
; 0000 0161 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0162 // USART1 Receiver: On
; 0000 0163 // USART1 Transmitter: On
; 0000 0164 // USART1 Mode: Asynchronous
; 0000 0165 // USART1 Baud Rate: 9600
; 0000 0166 UCSR1A=0x00;
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
; 0000 0167 UCSR1B=0x98;
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
; 0000 0168 UCSR1C=0x06;
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
; 0000 0169 UBRR1H=0x00;
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
; 0000 016A UBRR1L=0x67;
;PCODE: $0000044F VOL: 0
;PCODE: $00000450 VOL: 0
; 0000 016B 
; 0000 016C // Analog Comparator initialization
; 0000 016D // Analog Comparator: Off
; 0000 016E // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 016F ACSR=0x80;
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
; 0000 0170 SFIOR=0x00;
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
; 0000 0171 
; 0000 0172 // ADC initialization
; 0000 0173 // ADC disabled
; 0000 0174 ADCSRA=0x00;
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
; 0000 0175 
; 0000 0176 // SPI initialization
; 0000 0177 // SPI disabled
; 0000 0178 SPCR=0x00;
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
; 0000 0179 
; 0000 017A // TWI initialization
; 0000 017B // TWI disabled
; 0000 017C TWCR=0x00;
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
; 0000 017D 
; 0000 017E // Global enable interrupts
; 0000 017F #asm("sei")
;PCODE: $0000045B VOL: 0
	sei
;PCODE: $0000045C VOL: 0
; 0000 0180 
; 0000 0181 // inisialisasi LCD
; 0000 0182 LCD_Init();
;PCODE: $0000045D VOL: 0
; 0000 0183 PwmMKa(400);    	// 25%
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
; 0000 0184 PwmMKi(0);     	// 25%
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
; 0000 0185 MKi_CCW;
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
; 0000 0186 MKa_CW;
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
; 0000 0187 LCD_TulisF(0,"pls/10ms.Ka:");
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
; 0000 0188 LCD_TulisF(1,"rpm ka:");
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
;PCODE: $00000473 VOL: 0
; 0000 0189 
; 0000 018A while (1)
;PCODE: $00000474 VOL: 0
; 0000 018B       {
; 0000 018C       // Place your code here
; 0000 018D       // menampilkan data kecepatan aktual motor Kanan (pulsa/10ms)
; 0000 018E       // pulsa per detik = data * 100
; 0000 018F       // rps encoder = pulsa per detik / 16
; 0000 0190       // rps shaft motor = rps encoder / 17.3
; 0000 0191       // rpm shaft motor = rps shaftmotor * 60
; 0000 0192       LCD_GotoXY(13,0); LCD_Angka3(dSpeedKa); LCD_Data(' ');
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
; 0000 0193       LCD_GotoXY(7,1); LCD_Angka4((((dSpeedKa * 100.0)/16)/17.3)*60); LCD_TextF(" RPM");
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
; 0000 0194       }
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
; 0000 0195 }
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
