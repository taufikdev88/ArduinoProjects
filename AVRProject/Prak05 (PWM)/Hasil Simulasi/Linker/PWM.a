;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 4/12/2019
;Author  : unknown
;Company :
;Comments:
;
;
;Chip type               : ATmega8535
;Program type            : Application
;AVR Core Clock frequency: 11.059200 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 128
;*****************************************************/
;
;#include <mega8535.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;//Alias dari PORT
;#define PWM_1_OUT PORTB.0
;#define PWM_2_OUT PORTB.1
;#define PWM_3_OUT PORTB.2
;#define PWM_4_OUT PORTB.3
;#define PWM_5_OUT PORTB.4
;#define PWM_6_OUT PORTB.5
;#define PWM_7_OUT PORTB.6
;#define PWM_8_OUT PORTB.7
;
;//Deklarasi
;unsigned int pwm1, pwm2, pwm3, pwm4, pwm5, pwm6, pwm7, pwm8;
;
;// Timer 0 output compare interrupt service routine
;interrupt [TIM0_COMP] void timer0_comp_isr(void)
; 0000 0029 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 002A // Place your code here
; 0000 002B static int counter = 0;
; 0000 002C if (++counter>569)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 002D {   counter=0;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 002E     PORTB=0xFF;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002F     }
; 0000 0030     if (pwm1==counter) PWM_1_OUT = 0;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0031     if (pwm2==counter) PWM_2_OUT = 0;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0032     if (pwm3==counter) PWM_3_OUT = 0;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0033     if (pwm4==counter) PWM_4_OUT = 0;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0034     if (pwm5==counter) PWM_5_OUT = 0;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0035     if (pwm6==counter) PWM_6_OUT = 0;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0036     if (pwm7==counter) PWM_7_OUT = 0;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0037     if (pwm8==counter) PWM_8_OUT = 0;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0038 }
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 003D {
;PCODE: $00000050 VOL: 0
; 0000 003E // Declare your local variables here
; 0000 003F 
; 0000 0040 // Input/Output Ports initialization
; 0000 0041 // Port A initialization
; 0000 0042 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0043 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0044 PORTA=0x00;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0045 DDRA=0x00;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0046 
; 0000 0047 // Port B initialization
; 0000 0048 // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0049 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 004A PORTB=0x00;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 004B DDRB=0xFF;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 004C 
; 0000 004D // Port C initialization
; 0000 004E // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004F // State7=P State6=P State5=P State4=P State3=P State2=P State1=P State0=P
; 0000 0050 PORTC=0xFF;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0051 DDRC=0x00;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0052 
; 0000 0053 // Port D initialization
; 0000 0054 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0055 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0056 PORTD=0x00;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0057 DDRD=0x00;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0058 
; 0000 0059 // Timer/Counter 0 initialization
; 0000 005A // Clock source: System Clock
; 0000 005B // Clock value: 1382.400 kHz
; 0000 005C // Mode: CTC top=OCR0
; 0000 005D // OC0 output: Disconnected
; 0000 005E TCCR0=0x0A;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 005F TCNT0=0x00;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0060 OCR0=0x22;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0061 
; 0000 0062 // Timer/Counter 1 initialization
; 0000 0063 // Clock source: System Clock
; 0000 0064 // Clock value: Timer1 Stopped
; 0000 0065 // Mode: Normal top=0xFFFF
; 0000 0066 // OC1A output: Discon.
; 0000 0067 // OC1B output: Discon.
; 0000 0068 // Noise Canceler: Off
; 0000 0069 // Input Capture on Falling Edge
; 0000 006A // Timer1 Overflow Interrupt: Off
; 0000 006B // Input Capture Interrupt: Off
; 0000 006C // Compare A Match Interrupt: Off
; 0000 006D // Compare B Match Interrupt: Off
; 0000 006E TCCR1A=0x00;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 006F TCCR1B=0x00;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0070 TCNT1H=0x00;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0071 TCNT1L=0x00;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0072 ICR1H=0x00;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0073 ICR1L=0x00;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0074 OCR1AH=0x00;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0075 OCR1AL=0x00;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0076 OCR1BH=0x00;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0077 OCR1BL=0x00;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0078 
; 0000 0079 // Timer/Counter 2 initialization
; 0000 007A // Clock source: System Clock
; 0000 007B // Clock value: Timer2 Stopped
; 0000 007C // Mode: Normal top=0xFF
; 0000 007D // OC2 output: Disconnected
; 0000 007E ASSR=0x00;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 007F TCCR2=0x00;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0080 TCNT2=0x00;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0081 OCR2=0x00;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0082 
; 0000 0083 // External Interrupt(s) initialization
; 0000 0084 // INT0: Off
; 0000 0085 // INT1: Off
; 0000 0086 // INT2: Off
; 0000 0087 MCUCR=0x00;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0088 MCUCSR=0x00;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0089 
; 0000 008A // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 008B TIMSK=0x02;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 008C 
; 0000 008D // USART initialization
; 0000 008E // USART disabled
; 0000 008F UCSRB=0x00;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0090 
; 0000 0091 // Analog Comparator initialization
; 0000 0092 // Analog Comparator: Off
; 0000 0093 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0094 ACSR=0x80;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0095 SFIOR=0x00;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0096 
; 0000 0097 // ADC initialization
; 0000 0098 // ADC disabled
; 0000 0099 ADCSRA=0x00;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 009A 
; 0000 009B // SPI initialization
; 0000 009C // SPI disabled
; 0000 009D SPCR=0x00;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 009E 
; 0000 009F // TWI initialization
; 0000 00A0 // TWI disabled
; 0000 00A1 TWCR=0x00;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 00A2 
; 0000 00A3 // Global enable interrupts
; 0000 00A4 #asm("sei")
;PCODE: $00000095 VOL: 0
	sei
;PCODE: $00000096 VOL: 0
; 0000 00A5 
; 0000 00A6 pwm1 = 57;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 00A7 pwm2 = 114;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 00A8 pwm3 = 171;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 00A9 pwm4 = 228;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 00AA pwm5 = 285;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 00AB pwm6 = 342;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 00AC pwm7 = 399;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00AD pwm8 = 456;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 00AE 
; 0000 00AF while (1)
;PCODE: $000000A7 VOL: 0
; 0000 00B0       {
; 0000 00B1       // Place your code here
; 0000 00B2 
; 0000 00B3       }
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 00B4 }
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
